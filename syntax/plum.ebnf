program               ::= prg_stmt
                        | program prg_stmt
prg_stmt              ::= fn_def
                        | fn_decl

fn_def                ::= fn_decl block
fn_decl               ::= type IDENT COLON LBRACKET param_list_opt RBRACKET

param_list_opt        ::= ε
                        | param_list
param_list            ::= parametre
                        | param_list VBAR parametre
parametre             ::= type IDENT

block                 ::= block_line_list BLOCK_END
block_line_list       ::= block_line
                        | block_line_list block_line
block_line            ::= VBAR stmt

stmt                  ::= ε
                        | expression
                        | var_decl
                        | ret_stmt

var_decl              ::= type IDENT
ret_stmt              ::= RET LBRACKET expression RBRACKET
                        | RET LBRACKET RBRACKET

expression            ::= LPAREN expression RPAREN
                        | expression EQUAL expression
                        | expression PLUS expression 
                        | expression MINUS expression
                        | expression STAR expression
                        | expression SLASH expression 
                        | function_call
                        | STR_LITERAL
                        | CHR_LITERAL
                        | NUM_LITERAL
                        | IDENT

function_call        ::= LPAREN IDENT RPAREN LBRACKET arg_list_opt RBRACKET
arg_list_opt         ::= ε
                       | arg_list
arg_list             ::= expression
                       | arg_list VBAR expression

type                 ::= TYPE
                       | PTR type

TYPE                 ::= "ABYSS"
                       | "F(32|64)"
                       | "B1"
                       | "C(1|2|4)"
                       | "[IU](8|16|32|64|SIZE)"
KWORD                ::= "IF"
                       | "ELSE"
                       | "LOOP"
                       | "BREAK"
PTR                  ::= "@"
RET                  ::= "RET"
LPAREN               ::= "("
RPAREN               ::= ")"
LBRACKET             ::= "["
RBRACKET             ::= "]"
BLOCK_END            ::= "\\_"
COLON                ::= ":"
EQUAL                ::= "="
VBAR                 ::= "|"
PLUS                 ::= "+"
MINUS                ::= "-"
STAR                 ::= "*"
SLASH                ::= "/"
CHR_LITERAL          ::= '\''([^\\\']|\\.)'\'
STR_LITERAL          ::= "\""([^\"\\]|\\.)*\""
NUM_LITERAL          ::= [0-9]+
IDENT                ::= [a-zA-Z_][a-zA-Z0-9_]*

