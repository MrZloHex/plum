program               ::= { prg_stmt }
prg_stmt              ::= fn_def
                        | fn_decl
                        | type_def

fn_def                ::= fn_decl block
fn_decl               ::= type IDENT COLON LBRACKET parametres RBRACKET
type_def              ::= TYPEDEF IDENT COLON block

parametres            ::= ε
                        | type IDENT { VBAR type IDENT } [ VBAR ELLIPSIS ]
                        | ELLIPSIS

block                 ::= { VBAR stmt } BLOCK_END

stmt                  ::= ε
                        | expression
                        | var_decl
                        | ret_stmt
                        | cond_stmt
                        | loop_stmt
                        | BREAK


loop_stmt             ::= LOOP block


var_decl              ::= type IDENT
ret_stmt              ::= RET LBRACKET expression RBRACKET
                        | RET LBRACKET RBRACKET

expression            ::= LPAREN expression RPAREN
                        | expression EQUAL expression
                        | expression PLUS expression 
                        | expression MINUS expression
                        | expression STAR expression
                        | expression SLASH expression 
                        | function_call
                        | STR_LITERAL
                        | CHR_LITERAL
                        | NUM_LITERAL
                        | IDENT

function_call        ::= LPAREN IDENT RPAREN LBRACKET arg_list_opt RBRACKET
arg_list_opt         ::= ε
                       | arg_list
arg_list             ::= expression
                       | arg_list VBAR expression

type                 ::= TYPE
                       | PTR type

TYPE                 ::= "ABYSS"
                       | "F(32|64)"
                       | "B1"
                       | "C(1|2|4)"
                       | "[IU](8|16|32|64|SIZE)"
KWORD                ::= "IF"
                       | "ELSE"
                       | "LOOP"
                       | "BREAK"
PTR                  ::= "@"
RET                  ::= "RET"
LPAREN               ::= "("
RPAREN               ::= ")"
LBRACKET             ::= "["
RBRACKET             ::= "]"
BLOCK_END            ::= "\\_"
COLON                ::= ":"
EQUAL                ::= "="
VBAR                 ::= "|"
PLUS                 ::= "+"
MINUS                ::= "-"
STAR                 ::= "*"
SLASH                ::= "/"
CHR_LITERAL          ::= '\''([^\\\']|\\.)'\'
STR_LITERAL          ::= "\""([^\"\\]|\\.)*\""
NUM_LITERAL          ::= [0-9]+
IDENT                ::= [a-zA-Z_][a-zA-Z0-9_]*

